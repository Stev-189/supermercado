{"version":3,"sources":["components/asset/listSuper.js","components/TodoCreateList.js","components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoReset.js","components/TodoApp.js","index.js"],"names":["listSuper","TodoCreateList","list","map","e","i","id","Date","getTime","desc","done","todoReducer","state","action","type","payload","filter","todo","temp","find","listaS","TodoListItem","index","handleToggle","handleDelete","className","onClick","TodoList","todos","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","_","useForm","description","handleInputChanges","reset","onSubmit","preventDefault","trim","length","newTodo","placeholder","autoComplete","onChange","TodoReset","handleResetTodo","listaStorage","JSON","parse","localStorage","getItem","init","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","swal","title","text","icon","dangerMode","buttons","then","timer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd1bff02.chunk.js","sourcesContent":["export const listSuper=[\n  'Galletas Soda Amarillas (4)',\n  'Pan de Molde Blanco Ideal (1)',\n  'Detergente Drive polvo (1)',\n  'Confort Elite (Pack conveniente)',\n  'Yoghurt Soprole (Pack)',\n  'Queso Quilque (28L)',\n  'PaÃ±os Loza (1)',\n  'Cloro (2)',\n  'CloroGel (2)',\n  'Jabon Popeye (2)',\n  'Manjar Grande (1)',\n  'Ketchup (1KG)',\n  'Jugos vivo (10)'\n]","export const TodoCreateList = (list) => {\n  return list.map((e,i)=> {\n    return {\n      id: `${i}R${new Date().getTime()}`,\n      desc: e,\n      done: false\n    }\n  });\n  \n}\n","import { listSuper } from \"./asset/listSuper\";\nimport { TodoCreateList } from \"./TodoCreateList\";\n\nexport const todoReducer=(state=[],action)=>{\n  switch (action.type) {\n    case 'add':\n      return [...state, action.payload];\n    case 'delete':\n      return state.filter(todo=>todo.id!==action.payload);\n    \n    case 'toggle':\n      // return state.map(todo=>(todo.id===action.payload)?{...todo, done: !todo.done}:todo);\n      state=state.map(todo=>(todo.id===action.payload)?{...todo, done: !todo.done}:todo);\n      let temp = state.find(todo=>todo.id===action.payload);\n      state=state.filter(todo=>todo.id!==action.payload);\n      return (temp.done)?[...state, temp]:[temp,...state];\n\n    \n    case 'reset':\n      let listaS =TodoCreateList(listSuper)\n      return listaS;\n    \n    default:\n      return state;\n  }\n}","import React from 'react'\n\nexport const TodoListItem = ({todo, index, handleDelete , handleToggle}) => {\n  return (\n    <>\n    <li\n        key={todo.id}//todos los elementos deben llevar un key\n        className='list-group-item'\n\n      > <p \n        onClick={()=>handleToggle(todo.id)}\n        className={`${ todo.done && 'complete'}`}\n      >\n          {index+1}.- {todo.desc} </p>\n      {/* <button \n        className='btn btn-danger'\n        onClick={()=>{ handleDelete(todo.id) }}\n      >Borrar</button> */}\n    </li>\n    {/* <hr /> */}\n    </>\n  )\n}","import React from 'react'\nimport { TodoListItem } from './TodoListItem'\n\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\n  return (\n    <ul className='list-group list-group-flush'>\n      {\n        todos.map((todo,i)=>(\n          <TodoListItem\n            key={todo.id}\n            todo={todo}\n            index={i}\n            handleDelete={handleDelete}\n            handleToggle={handleToggle}\n          />\n          \n        ))\n      }\n  </ul>\n  )\n}","import React from 'react'\nimport { useForm } from '../hooks/useForm';\n\n\nexport const TodoAdd = ({handleAddTodo}) => {\n  const [{description}, handleInputChanges, reset]= useForm({\n    description:''\n  })\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    if(description.trim().length<=1){return;}\n    \n    const newTodo={\n      id: new Date().getTime(),\n      desc: description,\n      done: false\n    }\n\n    handleAddTodo(newTodo);\n    reset();\n  }\n  return (\n    <>\n        <h4>Agregar</h4>\n          <hr />\n          <form onSubmit={handleSubmit}>\n            <input\n              type='text'\n              name='description'\n              className='form-control'\n              placeholder='Comrar...'\n              autoComplete='off'\n              value={description}\n              onChange= {handleInputChanges}\n            />\n            <button\n              type='submit'\n              className='btn btn-outline-primary mt-1 form-control'\n            >\n              Agregar\n            </button>\n          </form>\n          <hr />\n          <hr />\n          <hr />\n    </>\n  )\n}","import { useState } from \"react\"\n\nexport const useForm = (initialState={}) => {\n  const [values, setValues] = useState(initialState)\n  const reset=_=>setValues(initialState)\n  const handleInputChange =({target})=>{\n    setValues({\n      ...values,\n      [target.name]:target.value\n    })\n  }\n  return [values,handleInputChange, reset];\n}","import React from 'react'\n\nexport const TodoReset = ({handleResetTodo}) => {\n  return (\n    <div>\n      <button\n        className='btn btn-danger mt-1 form-control'\n        onClick={handleResetTodo}\n      >\n      Traer lista\n      </button> \n    </div>\n  )\n}\n","import React, { useEffect, useReducer } from 'react'\nimport { listSuper } from './asset/listSuper';\nimport { todoReducer } from './todoReducer'\nimport { TodoList } from './TodoList';\nimport { TodoAdd } from './TodoAdd';\nimport { TodoReset } from './TodoReset';\nimport { TodoCreateList } from './TodoCreateList';\nimport swal from 'sweetalert';\nimport './styles.css';\n\nlet listaS =TodoCreateList(listSuper)\n\n\nlet listaStorage=JSON.parse(localStorage.getItem('todos'))\n\nconst init=()=>{\n  return listaStorage || listaS\n}\n\nexport const TodoApp = () => {\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\n\n  useEffect(()=>{\n    localStorage.setItem('todos', JSON.stringify(todos))\n  },[todos])\n   \n  const handleAddTodo=(newTodo)=>{\n    dispatch({\n      type: 'add',\n      payload: newTodo\n    });\n  }\n  const handleResetTodo=()=>{\n    swal({\n      title: \"Traer Lista\",\n      text: \"Deseas traer nuevamente la lista de compras, se borraran los ultimos items agregados\",\n      icon: \"info\",\n      dangerMode: true,\n      buttons:['No', 'Si']\n    }).then(e => {\n      if (e) {\n        dispatch({\n          type: 'reset',\n          payload: listaS\n        })\n        swal({icon: \"success\", timer: 1000});\n      }\n    });\n\n  }\n  const handleDelete=(todoId)=>{\n    const action={\n      type: 'delete',\n      payload: todoId\n    }\n    dispatch(action)\n  }\n\n  const handleToggle=(todoId)=>{\n    dispatch ({\n      type: 'toggle',\n      payload: todoId\n    })\n  }\n  return (\n    <div>\n      <h1>Compras ({todos.length})</h1>\n      <hr />\n      <div className='row'>\n        <div className='col-12'>\n\n          <TodoList \n            todos={todos}\n            handleDelete= {handleDelete}\n            handleToggle={handleToggle}\n          />\n        </div>\n      </div>\n      <hr />\n        <div className='col-12'>\n          <TodoAdd handleAddTodo= {handleAddTodo}/>\n        </div>\n\n        <div className='col-12'>\n          <TodoReset handleResetTodo={handleResetTodo}\n          />\n        </div>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/TodoApp';\n\nReactDOM.render(\n    <TodoApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}